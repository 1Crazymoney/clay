swagger: '2.0'
info:
  description: Golem Brass Gateway API for Golem Unlimited
  version: 1.0.0
  title: Golem Gateway API
  contact:
    email: contact@golem.network
    url: https://golem.network
  license:
    name: GPL 3.0
    url: 'https://www.gnu.org/licenses/gpl-3.0.html'
host: unlimited.golem.network
basePath: /gw/v1
schemes:
  - https
  - http
paths:
  '/subscribe/{nodeId}':
    parameters:
      - $ref: '#/parameters/nodeId'
    put:
      summary: Creates or amends subscription to Golem network
      operationId: subscribe
      parameters:
        - name: body
          in: body
          description: Subscription spec
          required: true
          schema:
            $ref: '#/definitions/SubscribeRequest'
      responses:
        '200':
          description: subscription amended (supported taskTypes changed)
        '201':
          description: subscription created
        '405':
          description: invalid input
    get:
      summary: Gets subscription status
      operationId: subscription
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SubscriberStatus'
        '404':
          description: subscription not found
        '405':
          description: invalid input
    delete:
      summary: Deletes subscription
      operationId: unsubscribe
      responses:
        '200':
          description: subscription deleted
        '404':
          description: subscription not found
        '405':
          description: invalid input
  '/{nodeId}/task/{taskId}':
    parameters:
      - $ref: '#/parameters/nodeId'
      - $ref: '#/parameters/taskId'
    post:
      summary: Sends task computation willingness
      operationId: wantToComputeTask
      responses:
        '200':
          description: subtask definition
          schema:
            $ref: '#/definitions/Subtask'
    get:
      summary: Gets task information
      operationId: taskInfo
      responses:
        '200':
          description: task definition
          schema:
            $ref: '#/definitions/Task'
        '404':
          description: not found
    delete:
      summary: Revokes task computation willingnes
      operationId: cancelTask
      responses:
        '200':
          description: task deleted
        '404':
          description: not found
  '/{nodeId}/subtask/{subtaskId}':
    parameters:
      - $ref: '#/parameters/nodeId'
      - $ref: '#/parameters/subtaskId'
    put:
      summary: Confirms subtask computation
      operationId: startResourcesPull
      responses:
        '200':
          description: OK
        '404':
          description: not found
    get:
      summary: Gets subtask information
      operationId: subtaskInfo
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/Subtask'
        '404':
          description: not found
    post:
      summary: Report subtask completed
      operationId: subtaskResult
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Resource'
      responses:
        '200':
          description: OK
        '404':
          description: not found
    delete:
      summary: Revokes subtask computation
      operationId: cancelSubtask
      responses:
        '200':
          description: OK
        '404':
          description: not found
  '/{nodeId}/resource/{resourceId}':
    parameters:
      - $ref: '#/parameters/nodeId'
      - $ref: '#/parameters/resourceId'
    get:
      summary: Downloads binary resource
      operationId: downloadResource
      produces:
        - application/zip
      responses:
        '200':
          description: A zipped resource file
          schema:
            type: file
  '/{nodeId}/uploadResource':
    parameters:
      - $ref: '#/parameters/nodeId'
    post:
      summary: Uploads an resource
      operationId: uploadResource
      consumes:
        - multipart/form-data
      parameters:
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: false
          type: string
        - name: file
          in: formData
          description: file to upload
          required: true
          type: file
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Resource'
        '405':
          description: invalid request
  '/{nodeId}/events':
    parameters:
      - $ref: '#/parameters/nodeId'
      - name: lastEventId
        in: query
        description: provide event id from previous call
        type: integer
        format: int64
    get:
      summary: List events for given node id; starting after last event id
      operationId: fetchEvents
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Events'
parameters:
  nodeId:
    description: ethereum address identifying node e.g.,  '0x1ca0fd52dd8d0abf3a577f5b4645806f774f2f7b'
    name: nodeId
    in: path
    required: true
    type: string
    minLength: 42
    maxLength: 42
    pattern: '0x[0-9a-f]{40}'
  taskId:
    description: uuid e.g., '682e9b26-ed89-11e8-a9e0-6e845eabffe0'
    name: taskId
    in: path
    required: true
    type: string
  subtaskId:
    description: uuid e.g., '682e9b26-ed89-11e8-a9e0-6e845eabffe0'
    name: subtaskId
    in: path
    required: true
    type: string
  resourceId:
    description: uuid e.g., '682e9b26-ed89-11e8-a9e0-6e845eabffe0'
    name: resourceId
    in: path
    required: true
    type: string
definitions:
  SubscribeRequest:
    type: object
    required:
      - taskType
    properties:
      taskType:
        type: string
        example: blender
  SubscriberStatus:
    type: object
    properties:
      active:
        type: boolean
      tasksTypes:
        type: array
        items:
          type: string
      tasksStats:
        type: object
        properties:
          requested:
            type: integer
          succeded:
            type: integer
          failed:
            type: integer
          timedout:
            type: integer
  Task:
    description: task is a basic unit of work requested in Golem Network. It is divided into smaller chunks - subtasks. Number of subtaks is defined by requestor.
    type: object
    properties:
      taskId:
        $ref: '#/parameters/taskId'
      perfIndex:
        type: number
        format: float
        example: 314
      maxResourceSize:
        type: integer
        format: int64
      maxMemorySize:
        type: integer
        format: int64
      numCores:
        type: integer
        format: int32
      price:
        $ref: '#/definitions/Price'
      extraData:
        $ref: '#/definitions/ExtraData'
  Subtask:
    description: Subtask is a part of task supossed to be executed by provider which submited task computation willingness.
    type: object
    properties:
      subtaskId:
        $ref: '#/parameters/subtaskId'
      description:
        type: string
      resource:
        $ref: '#/definitions/Resource'
      deadline:
        type: integer
      price:
        $ref: '#/definitions/Price'
      extraData:
        $ref: '#/definitions/ExtraData'
  Price:
    type: integer
    format: int64
  ExtraData:
    type: string
  Resource:
    description: Binary content (files) required to execute subtask
    type: object
    properties:
      resourceId:
        $ref: '#/parameters/resourceId'
      metadata:
        type: string
  SubtaskVerification:
    description: Subtask verification result
    type: object
    properties:
      taskId:
        $ref: '#/parameters/taskId'
      verificationResult:
        type: string
        enum:
          - OK
          - failed
          - timedout
  Events:
    description: Table with trhee types of events. Every item has id and exactly one of remaining fields filled.
    type: array
    items:
      type: object
      properties:
        eventId:
          type: integer
          format: int64
        task:
          $ref: '#/definitions/Task'
        resource:
          $ref: '#/definitions/Resource'
        subtaskVerification:
          $ref: '#/definitions/SubtaskVerification'