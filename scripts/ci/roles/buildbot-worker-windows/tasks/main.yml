- include_vars:
    file: site_settings.yml
    name: site_settings

- name: Register space required in GB for vs2017 install
  set_fact:
    required_space: 35


- name: Test if we have winrm connection
  win_ping:

# FIXME: Use gather_facts: True and ansible_mounts for this. (Needs testing)
- name: Run ps to get free disk space
  win_command:  powershell.exe "Get-PSDrive C | Select-Object Free | ConvertTo-Json"
  register: getpsdrive

- name: Register freediskspace as a fact
  set_fact:
    freediskspace: "{{ (getpsdrive.stdout | from_json).Free // 1073741824 }}"

# FIXME: This should not be taken into account if packages are already installed
- name: Check if required disk space is available
  assert:
    that:
      - "freediskspace | int > required_space"

- name: Install python3
  win_chocolatey:
    name: python3

- name: Install git
  win_chocolatey:
    name: git
    params: '"/GitAndUnixToolsOnPath"'

- name: Install vs2017
  win_chocolatey:
    name: visualstudio2017community
    timeout: 5400

- name: Install visual cpp build tools
  win_chocolatey:
    name: microsoft-visual-cpp-build-tools

- name: Install innosetup
  win_chocolatey:
    name: innosetup

- name: Install VS2017 Workload Native Desktop
  win_chocolatey:
    name: visualstudio2017-workload-nativedesktop
    params: "--includeOptional"
    timeout: 5400

- name: Install pypiwin32
  win_shell: py -3 -m pip install pypiwin32
  args:
    creates: C:\Python36\Scripts\pywin32_postinstall.py
  notify: pywin32 installed

- name: Ensure that winpy wintypes36.dll is in PATH
  win_path:
    elements:
      - 'C:\Python36\Lib\site-packages\pypiwin32_system32'
      - 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin'


- name: setup buildbot-worker user
  win_user:
    name: buildbot-worker
    password: "{{ vault_windows_worker_password }}"
    password_never_expires: yes
    user_cannot_change_password: yes


- name: add account to Log on as a service
  win_user_right:
    name: SeServiceLogonRight
    users:
    - '.\buildbot-worker'
    action: add


- name: install buildbot-worker
  # NOTE: Pip for buildbot doesn't work with Windows 10 PL/RU/etc.
  # win_shell: py -3 -m pip install buildbot-worker
  win_shell: py -3 -m easy_install buildbot-worker
  args:
    creates: C:\Python36\Scripts\buildbot-worker.exe


- name: create workspace for the buildbot worker
  become: yes
  become_user: buildbot-worker
  win_shell:
    C:\Python36\Scripts\buildbot-worker.exe create-worker
      C:\BuildbotWorker
      "{{worker_master_hostname}}"
      "{{worker_name}}"
      "{{site_settings.worker_pass}}"
  args:
    creates: C:\BuildbotWorker


- name: check if service is created
  win_shell: Get-Service -Name BuildBot -ErrorAction SilentlyContinue
  register: service_exists
  ignore_errors: yes


- name: create service for the buildbot worker
  win_shell:
    C:\Python36\Scripts\buildbot_worker_windows_service.exe
      --user .\buildbot-worker
      --password
      "{{ vault_windows_worker_password }}"
      --startup delayed
      install
  when: service_exists.rc == 1


- name: check if worker started once
  become: yes
  become_user: buildbot-worker
  ignore_errors: yes
  win_stat:
    path: C:\BuildbotWorker\twistd.log
  register: log_exists_raw

# Check for exists, stat fails when file is locked, meaning its there.
- set_fact:
    log_not_exists: " ( 'exception' in log_exists_raw and not log_exists_raw.exception ) or ( 'stat' in log_exists_raw and not log_exists_raw.stat.exists )"


- name: Start worker for first time
  become: yes
  become_user: buildbot-worker
  win_shell:
    Start-Process C:\Python36\Scripts\buildbot-worker.exe -ArgumentList "start","C:\BuildbotWorker"
  when: log_not_exists

- pause:
    seconds: 10
  when: log_not_exists


- name: Stop worker for first time
  become: yes
  become_user: buildbot-worker
  win_shell:
    Stop-Process -name buildbot-worker
  when: log_not_exists


- name: set registry key right
  win_acl:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\BuildBot
    user: .\buildbot-worker
    rights: FullControl
    type: allow
    state: present
    inherit: ContainerInherit, ObjectInherit
    propagation: 'None'


- name: Create registry path BuildBot
  win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\services\BuildBot


- name: Create registry path BuildBot\Parameters
  win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\services\BuildBot\Parameters


- name: Add buildbot worker folder to registry
  win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\services\BuildBot\Parameters
    name: directories
    data: C:\BuildbotWorker
    type: String


- name: start service
  win_service:
    name: BuildBot
    start_mode: delayed
    state: started
